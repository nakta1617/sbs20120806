MS Visual Studio 단축키

컴파일 - Ctrl + F5
컴파일 에러난 곳으로 바로 이동 - F4









① 문법

* #include - 다른 클래스를 사용 할 수 있도록 불러온다.
* 한 행을 마칠때는 ;를 붙여준다.
* 프로그램의 시작은 항상 main에서부터 시작한다.
* 행동을 정의하는 문법은 - void 행동이름(); - 헤더파일에
* 행동 구현은 - 
		void 클래스이름::행동이름() - cpp파일에
			{
				구현
			}
* 숫자는 int
* 화면에 찍는 방법은 - printf("찍을 내용"); or printf("%s",문자열.c_str());
* 클래스만들기 - VS의 솔루션탐색기의 소스파일

② 디버깅
* F9로 브레이크포인트를 잡는다.
* F5로 디버그 모드 실행을 한다.
* F11로 동작 내부를 탐험할 수 있다.


③ 반복문
* while, for

     while (true) - 괄호 안쪽이 참일때 반복
	{
	  반복할 구문
	}
      for(1;2;4)  //2번이 거짓이되면 탈출
	{
	    3
	}
- 실행 순서는 1,2,3,4,2,3,4,2,3,4,2...


④ 조건문
* if

문법 - 
if(조건)
{

	

}

if(조건)
{


}

else
{


}
		



※게임의 실행 과정
* 키보드 입력은 받는다.
* 내부의 입력을 토대로 내부 데이터 처리(네트워크 게임 - 서버 처리)를 한다.
->필요하다면AI처리를 한다.
* 내부 데이터를 바탕으로 화면에 그려준다. 


* 클래스의 멤버의 이름이 겹치지않게 m_ 또는 m 이라고 붙여준다.
* sleep = 1000이 거의 1초다.


⑤ 헤더 파일 만들기
* 최상단에 #pragma once를 꼭 붙여준다!(붙여줘야 헤더파일을 쓸수 있다 또는 헤더파일이라는 표시)


⑥ 함수

*            자료형 함수이름(자료형 변수이름,...)
* 의미 :     반환값 호출시이름(인자값 , ....)
* 함수에서는 출력값       	입력값


 함수의 개념


입력=>   F(x)   =>출력


* 함수로 풀면 메인 부분이 훨씬 쉬워질수있다


⑦ 연산자
<,>,==,<=,>=

(왼쪽이 오른쪽보다..)
* < : 작다
* > : 크다
* <= : 과 같거나 작다
* >= : 과 같거나 크다
* == : 과 같다
* != : 과 다르다
⑦-1 연산자2
* not10 => !10 = 0;
* ++변수(전위) : 값을 1 증가한다.
* 변수++(후위) : 값을 1 증가한다.(전위와는 미묘하게 다르다)
* &&
* ||


⑧ 자료형(정수)

* char - 문자 하나(숫자 - 아스키 코드)
범위 : -128 ~ 127
* short - (int보다 작은)정수
범위 : -32768 ~ 32767
* long - 정수 : -2147483648~2147483647
* int - 기계마다 다르다
(window상에서는 숫자를 표현)범위 : -2147483648~2147483647
※ __int64 - 아주 큰 정수를 표현 
* 정수 자료형 앞에 unsigned를 붙이면 "음수가 없음"을 표시




⑨ 자료형2(소수)
* float - 소수를 표현
-정밀도는 7자리이다
* double - 소수를 표현
-정밀도는 14자리이다



⑩ vector

* 선언 : #include <vector>
	using namespace std;

* 형식 : vector<자료형> 변수이름



※ push_back
형식 : (vector에서 선언한)변수이름.push_back(자기가하고싶은변수이름);


